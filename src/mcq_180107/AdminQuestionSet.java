/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mcq_180107;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author albert
 */
public class AdminQuestionSet extends javax.swing.JFrame {
    int operation =0;
    int row=0;
    String subId="2";
    String qsId="";
    /**
     * Creates new form AdminQuestionSet
     */
    public AdminQuestionSet() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        reset();
    }
    
    public void subId(String id){
        this.subId=id;
        System.out.println(this.subId);
        loadData();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnQS = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ));
        table.setShowVerticalLines(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Add New");
        btnClear.setToolTipText("");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSave.setLabel("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnQS.setText("Questions");
        btnQS.setMargin(new java.awt.Insets(0, 14, 0, 14));
        btnQS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQSActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Question Set Control");

        lblInfo.setForeground(new java.awt.Color(204, 0, 51));
        lblInfo.setText("jLabel4");

        jLabel1.setText("Name");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(txtName)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnQS, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(lblInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                            .addComponent(btnClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInfo)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnQS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:

        btnDelete.setEnabled(true);

        btnQS.setVisible(true);
        operation=1;

        // code to set selected value on form

        int column = table.getColumnCount();
        row = table.getSelectedRow();

        if(row>=0)
        {
            btnDelete.setEnabled(true);
        }

        lblInfo.setText("Update or Delete the question set "+ table.getModel().getValueAt(row,1).toString());
        //         String value = table.getModel().getValueAt(row,0).toString();
        qsId=table.getModel().getValueAt(row,0).toString();
        txtName.setText(table.getModel().getValueAt(row,1).toString());
    }//GEN-LAST:event_tableMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(operation==0)
        {
            JOptionPane.showMessageDialog(null, "No question set selected to delete.", "Delete", JOptionPane.ERROR_MESSAGE);
            return;
        }else{
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (null, "Are you sure you want to delete this question set?","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                // Saving code here
                Connection con= Connect.getConnection();
                PreparedStatement pst = null;
                try {
                    pst = con.prepareStatement("delete from question_sets where id=?");

                    pst.setString(1, qsId);
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(AdminQuestionSet.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                }
                JOptionPane.showMessageDialog(null, "Question Set Deleted", "Deleted", JOptionPane.INFORMATION_MESSAGE);
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                model.removeRow(row);
                reset();
                return;
            }
            return;

        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(operation==1){
            Connection con= Connect.getConnection();
            boolean chk=true;
           
            try {
                chk=checkQS(qsId,txtName.getText());
            } catch (SQLException ex) {
                Logger.getLogger(AdminQuestionSet.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            System.out.println(chk);
            if(checkField()){
                if (chk){
                    JOptionPane.showMessageDialog(null, "Question set name duplicate", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                else{
                    try {

                        PreparedStatement pst= con.prepareStatement("update question_sets set title=? where id=?");
                        pst.setString(1, txtName.getText());
                        pst.setString(2,qsId);
                        pst.executeUpdate();

                    } catch (SQLException ex) {
                        Logger.getLogger(AdminQuestionSet.class.getName()).log(Level.SEVERE, null, ex);
                        ex.printStackTrace();

                    }
                    DefaultTableModel model = (DefaultTableModel) table.getModel();

                    model.setValueAt(qsId, row, 0);
                    model.setValueAt(txtName.getText(), row, 1);
                    JOptionPane.showMessageDialog(null, "Successfully updated", "Updated", JOptionPane.INFORMATION_MESSAGE);
                    reset();
                    return;
                }
            }else return;

            //

        }
        else{
            if(checkField()){
                boolean chk=true;
                try {
                    chk=checkQSDup(txtName.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(AdminQuestionSet.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println(chk);
                if (chk){
                    JOptionPane.showMessageDialog(null, "Question Set duplicate. Please type another question set name", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }else{
                    Connection con= Connect.getConnection();
                    PreparedStatement pst;
                    try {
                        pst = con.prepareStatement("insert into question_sets (subject_id,title) values (?,?)");
                        pst.setString(1, subId);
                        
                        pst.setString(2, txtName.getText());
                        pst.execute();

                    } catch (SQLException ex) {
                        Logger.getLogger(AdminQuestionSet.class.getName()).log(Level.SEVERE, null, ex);
                        return;
                    }
                    ResultSet rs;
                    int last_inserted_id=0;
                    try {
                        rs = pst.getGeneratedKeys();
                        if(rs.next())
                        {
                            last_inserted_id = rs.getInt(1);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(AdminQuestionSet.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    DefaultTableModel model = (DefaultTableModel) table.getModel();
                    model.addRow(new Object[]{last_inserted_id, txtName.getText()});
                    JOptionPane.showMessageDialog(null, "Question Set Added Successfully", "Added", JOptionPane.INFORMATION_MESSAGE);
                    reset();
                    return;

                }
            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AdminSubject as= new AdminSubject();
        as.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnQSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQSActionPerformed
        // TODO add your handling code here:
        AdminQuestion aq= new AdminQuestion();
        aq.setSubId(this.subId);
        aq.setQsId(this.qsId);
        aq.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnQSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminQuestionSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminQuestionSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminQuestionSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminQuestionSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminQuestionSet().setVisible(true);
            }
        });
    }
    public void reset()
    {
        lblInfo.setText("Please fill up the form to add new question set");
        qsId="";
        txtName.setText("");
        operation=0;
        btnDelete.setEnabled(false);
        btnQS.setVisible(false);
    }
    boolean checkQS(String id,String name) throws SQLException{
           ResultSet rs;
           rs = Connect.getResult("select * from question_sets where subject_id = "+this.subId+" AND id <>"+id+" AND title='"+name+"' ");
           return (rs.next());
    }
    
    boolean checkQSDup(String name) throws SQLException{
        ResultSet rs;
        rs = Connect.getResult("select * from question_sets where subject_id = "+this.subId+" AND title='"+name+"' ");
        return (rs.next());
    }
    
    boolean checkField(){
        if(txtName.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Name cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;	 
        }
        return true; 
    }
    
    void loadData()
    {
        
       try {
           ResultSet rs;
           
           ResultSet count;
           rs = Connect.getResult("SELECT qs.id,qs.title,s.name FROM `question_sets` as qs,`subjects` as s WHERE s.id=qs.subject_id AND subject_id="+this.subId+"");
//           rs = Connect.getResult("SELECT * FROM `question_sets`");
           
           DefaultTableModel model = (DefaultTableModel) table.getModel();
           while(rs.next())
           {
            model.addRow(new Object[]{rs.getString(1), rs.getString(2)}); 
            jLabel3.setText("Question Set Control for "+rs.getString(3));
           }     
       } catch (SQLException ex) {
           Logger.getLogger(AdminSubject.class.getName()).log(Level.SEVERE, null, ex);
           ex.printStackTrace();
       }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnQS;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
